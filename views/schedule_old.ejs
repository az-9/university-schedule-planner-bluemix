<html>
<head>
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css"
          href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.3.1/fullcalendar.min.css">
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js"></script>
    <!--[if lt IE 9]>
    <script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js'></script>
    <![endif]-->
    <!--[if gte IE 9]><!-->
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <!--<![endif]-->
    <script type="text/javascript"
            src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/2.3.1/fullcalendar.min.js"></script>
    <script type="text/javascript"
            src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

    <!-- Optional theme -->
    <link rel="stylesheet"
          href="//cdn.rawgit.com/morteza/bootstrap-rtl/master/dist/cdnjs/3.3.1/css/bootstrap-rtl.min.css">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <script type="text/javascript">


        function toScheduleEvent(courseObject, week, relatedCourses, calendarnum) {

            var calendar = $('#calendar' + calendarnum).fullCalendar('getCalendar');

            var outputArray = [];
            var outputCourse = {};
            for (var i = 0; i < courseObject['courses'].length; i++) {
                for (var j = 1; j < 6; j++) {

                    var m = calendar.moment();
                    m.set('year', 2014);
                    m.set('month', 5);  // April
                    m.set('date', 7);
                    m.add(7 * (week - 1), 'days');
                    m.add(j, 'days');

                    if (courseObject['courses'][i]['days']['day' + j] != undefined) {
                        outputCourse['title'] = courseObject['title'];
                        outputCourse['start'] = m.format("YYYY-MM-DD") + 'T' + courseObject['courses'][i]['days']['day' + j]['from'] + ':00';
                        outputCourse['end'] = m.format("YYYY-MM-DD") + 'T' + courseObject['courses'][i]['days']['day' + j]['to'] + ':00';
                        outputCourse['teacher'] = courseObject['courses'][i]['teacher'];
                        outputCourse['available'] = courseObject['courses'][i]['available'];
                        outputCourse['place'] = courseObject['courses'][i]['days']['day' + j]['place'];
                        if (relatedCourses != undefined) outputCourse['data'] = relatedCourses;
                        outputCourse['day'] = j;
                        outputCourse['type'] = courseObject['courses'][i]['type'];
                        ;
                        outputArray.push(outputCourse);

                    }
                    outputCourse = {};
                }

            }
            return outputArray;

        }
        ;
        function calculateSchedule(chosenSubjects) { //After filter
            var schedules = [];
            var schedulesComb = cartesian(chosenSubjects);

            //console.log(schedulesComb);
            for (var i = 0; i < schedulesComb.length; i++) {
                var valid = true;
                for (var j = 0; j < schedulesComb[i].length - 1; j++) {

                    for (var k = j + 1; k < schedulesComb[i].length; k++) {
                        if (isConflict(schedulesComb[i][j][0], schedulesComb[i][k][0])) {
                            valid = false;
                            break;
                        }
                    }
                    if (!valid) break;
                }
                if (valid) {
                    var combAvailable = schedulesComb[i].every(function (currentSubject) {
                        return currentSubject.every(function (currentCourse) {
                            return currentCourse["courses"].every(function (currentObject) {
                                return currentObject["available"];
                            });
                        });
                    });
                    if (combAvailable)
                        schedulesComb[i]["available"] = true;
                    else
                        schedulesComb[i]["available"] = false;

                    console.log(schedulesComb[i]);
                    schedules.push(schedulesComb[i]);
                }
            }
            availableSelectedCourses = schedules.filter(function (filterArrayEle) {
                return filterArrayEle["available"];
            });
            console.log(availableSelectedCourses);
            return schedules;

        }
        function isConflict(o1, o2) {
            var valid = true;
            for (var i = 0; i < o1['courses'].length; i++) {

                for (var j = 0; j < o2['courses'].length; j++) {
                    for (var k = 1; k < 6; k++) {
                        if (o1['courses'][i]['days']['day' + k] != undefined && o2['courses'][j]['days']['day' + k] != undefined) {
                            //console.log('reached');
                            if (o1['courses'][i]['days']['day' + k]['from'] > o2['courses'][j]['days']['day' + k]['from'] && o1['courses'][i]['days']['day' + k]['from'] > o2['courses'][j]['days']['day' + k]['to']) {

                            } else if (o1['courses'][i]['days']['day' + k]['from'] < o2['courses'][j]['days']['day' + k]['from'] && o1['courses'][i]['days']['day' + k]['to'] < o2['courses'][j]['days']['day' + k]['from']) {

                            } else {
                                valid = false;
                                break;
                            }
                        }
                    }
                    if (!valid) break;
                }
                if (!valid) break;
            }
            return !valid;
        }
        function cartesian(arg) {
            var r = [], max = arg.length - 1;

            function helper(arr, i) {
                for (var j = 0, l = arg[i].length; j < l; j++) {
                    var a = arr.slice(0); // clone arr
                    a.push(arg[i][j]);
                    if (i == max) {
                        r.push(a);
                    } else
                        helper(a, i + 1);
                }
            }

            helper([], 0);
            return r;
        }
        function filterSubjects(courseBySubjectSimilarArray, chosenSubjectsStringArray) {//{"ريض 106",""101 سلم},""
            chosenSubjectsStringArray.sort();

            var chosen = [];
            for (var i = 0; i < chosenSubjectsStringArray.length; i++) {
                for (var j = 0; j < courseBySubjectSimilarArray.length; j++) {
                    if (chosenSubjectsStringArray[i].search(courseBySubjectSimilarArray[j][0][0]['title']) != -1) {
                        chosen.push(courseBySubjectSimilarArray[j]);
                        break;
                    }
                }
            }
            return chosen;
        }
        function sortCourses(data) {
            var dataTemp = data;
            var subjects = [];
            var coursesArray = dataTemp['data']['courses'];

            coursesArray.sort(function Comparator(a, b) {
                if (a['title'] < b['title']) return -1;
                if (a['title'] > b['title']) return 1;
                return 0;
            });

            //console.log(coursesArray);
            //console.log(coursesArray[0]);


            subjects = coursesArray.reduce(function (previousValue, currentValue, index, array) {
                if (index == 1) {
                    if (previousValue['title'].search(currentValue['title']) != -1) {
                        return [
                            [previousValue, currentValue]
                        ];
                    } else {
                        return [
                            [previousValue],
                            [currentValue]
                        ];
                    }

                } else {
                    if (previousValue[previousValue.length - 1][0]['title'].search(currentValue['title']) != -1) {
                        previousValue[previousValue.length - 1].push(currentValue);
                        return previousValue;

                    } else {
                        previousValue.push(Array(currentValue));
                        return previousValue;
                    }
                }


            });


            return subjects;
        }
        function sortCoursesSimilar(courseBySubjectArrayData) {
            var sortedCoursesByObjectAndTimeArray = [];
            for (var i = 0; i < courseBySubjectArrayData.length; i++) {
                var tempArr = [
                    [courseBySubjectArrayData[i][0]]
                ];
                //console.log("i:   "+i);
                courseBySubjectArrayData[i][0]['sortDone'] = true;
                var numDone = 1;

                while (numDone != courseBySubjectArrayData[i].length) {

                    for (var n = 0; n < courseBySubjectArrayData[i].length; n++) { //looking for not done
                        if (courseBySubjectArrayData[i][n]['sortDone'] == undefined) {
                            tempArr.push([courseBySubjectArrayData[i][n]]);
                            courseBySubjectArrayData[i][n]['sortDone'] = true;
                            numDone++;
                            break;
                        }
                    }
                    for (var j = 0; j < courseBySubjectArrayData[i].length; j++) {

                        if (courseBySubjectArrayData[i][j]['sortDone'] == undefined) {
                            var same = true;
                            for (var o = 0; o < courseBySubjectArrayData[i][j]['courses'].length; o++) {
                                if (tempArr[tempArr.length - 1][0]['courses'][o] != undefined) {

                                    for (var k = 1; k < 6; k++) {

                                        if (courseBySubjectArrayData[i][j]['courses'][o]['days']['day' + k] != undefined && tempArr[tempArr.length - 1][0]['courses'][o]['days']['day' + k] != undefined) {
                                            if (courseBySubjectArrayData[i][j]['courses'][o]['days']['day' + k]['from'].search(tempArr[tempArr.length - 1][0]['courses'][o]['days']['day' + k]['from']) == -1
                                                    || courseBySubjectArrayData[i][j]['courses'][o]['days']['day' + k]['to'].search(tempArr[tempArr.length - 1][0]['courses'][o]['days']['day' + k]['to']) == -1) {
                                                same = false;
                                                break;
                                            }


                                        } else if (courseBySubjectArrayData[i][j]['courses'][o]['days']['day' + k] != undefined || tempArr[tempArr.length - 1][0]['courses'][o]['days']['day' + k] != undefined) {
                                            same = false;
                                            break;
                                        }
                                    }
                                    if (!same) break;
                                }
                            }
                            if (same) {
                                tempArr[tempArr.length - 1].push(courseBySubjectArrayData[i][j]);
                                courseBySubjectArrayData[i][j]['sortDone'] = true;
                                numDone++;

                            }
                        }
                    }
                }
                sortedCoursesByObjectAndTimeArray.push(tempArr)
            }
            return sortedCoursesByObjectAndTimeArray;
        }

        var selectedDepartment = 0;
        var calculatedSchedule = [];
        var coursesInDepartment = JSON.parse('["100 سلم","101 ادا","101 سلم","101 كيح","101 كيم","102 سلم","103 سلم","103 فيز","104 سلم","104 فيز","105 سلم","106 ريض","106 سلم","107 سلم","108 سلم","111 عال","113 عال","122 بحث","151 ريض","200 ريض","200 مال","201 حسب","211 هاب","212 عال","215 عال","220 عال","227 عال","230 نال","244 ريض","254 ريض","303 هال","312 هاب","313 هاب","321 هاب","324 احص","333 هاب","335 نال","361 عال","381 هاب","385 نال","432 نال","434 هاب","439 هال","444 هاب","444 هال","455 هاب","466 هاب","472 نال","476 عال","477 هاب","478 عال","481 هاب","482 نال","485 هاب","493 نال","496 هاب","497 هاب","999 هاب"]');
        var selectedCoursesByIndex = [];
        var selectedCourses = [];
        var availableSelectedCourses = [];
        var showavailableComboOnly = true;

        function toTable(objarray, type, day) {
            var out = "<table><thead><tr><th>teacher</th><th>available</th><th>type</th><th>section</th><th>place</th></tr></thead><tbody>";

            for (var i = 0; i < objarray.length; i++) {
                for (var j = 0; j < objarray[i]['courses'].length; j++) {
                    if (objarray[i]['courses'][j]['type'].search(type) != -1 && objarray[i]['courses'][j]['days']['day' + day] != undefined) {
                        out += "<tr><td>" + objarray[i]['courses'][j]['teacher'] + "</td>";
                        out += "<td>" + ((objarray[i]['courses'][j]['available']) ? "available" : "not available") + "</td>";
                        out += "<td>" + objarray[i]['courses'][j]['type'] + "</td>";
                        out += "<td>" + objarray[i]['courses'][j]['section'] + "</td>";
                        out += "<td>" + objarray[i]['courses'][j]['days']['day' + day]['place'] + "</td>"
                        out += "</tr>"
                    }
                }
            }
            out += "</table>";
            return out;
        }
        function toSelect(objarray, id) {
            var out = '<select class="form-control"' + ((id != undefined) ? ' id="' + id : '') + '">';
            for (var i = 0; i < objarray.length; i++) {
                out += '<option>' + objarray[i] + '</option>';
            }
            out += '</select>';
            return out;
        }

        function populateCoursesAddList(isback) {
            document.getElementById('background').style.visibility = 'hidden';
            document.getElementById('loading').style.visibility = 'visible';
            var pathtoRequest=($(location).attr('href')[$(location).attr('href').length-1].indexOf("/")>-1)?$(location).attr('href')+"getcoursestitle/" :$(location).attr('href')+"/getcoursestitle/";
            $.get(pathtoRequest + selectedDepartment, function (data, status) {
                if (JSON.parse(data)["error"] != undefined) {
                    document.getElementById('loading').style.visibility = 'hidden';
                    document.getElementById('background').style.visibility = 'visible';
                } else {
                    //console.log(coursesInDepartment = JSON.parse(data));

                    document.getElementById('coursesAddList').innerHTML = '<div  class="entry input-group col-xs-6">' + toSelect(JSON.parse(data)) + '<span style="right:10px" class="input-group-btn"><button class="btn btn-success btn-add" type="button"><span class="glyphicon glyphicon-plus"></span></button></span></div>';


                    $("#schedule").css("visibility","hidden");
                    $("#selectDepartment").css("display","none");
                    $("#selectCourses").css("display","block");
                    if(isback) $("#schedule").css("display","none");
                    document.getElementById('loading').style.visibility = 'hidden';
                    document.getElementById('background').style.visibility = 'visible';
                }
            });


        }
        function populateSchedule() {
            selectedCoursesByIndex = [];
            $('#coursesAddList select').each(function (indexSelect, selectEle) {
                if (indexSelect != $('#coursesAddList select').length - 1)selectedCoursesByIndex.push(selectEle.selectedIndex)
            });
            //selectedCoursesByIndex.pop();
            document.getElementById('background').style.visibility = 'hidden';
            document.getElementById('loading').style.visibility = 'visible';
            $("#schedule").css("display","block");
            $("#calendar1").css("display","block");
            $("#calendar2").css("display","block");

            var pathtoRequest=($(location).attr('href')[$(location).attr('href').length-1].indexOf("/")>-1)?$(location).attr('href')+"getcourses/" :$(location).attr('href')+"/getcourses/";
            $.get(pathtoRequest + '{"coursesIndex":' + JSON.stringify(selectedCoursesByIndex) + ',"department":' + selectedDepartment + '}', function (data, status) {
                //console.log(JSON.parse(data));
                if (JSON.parse(data)["error"] != undefined) {
                    document.getElementById('loading').style.visibility = 'hidden';
                    document.getElementById('background').style.visibility = 'visible';
                    return;
                } else {
                    selectedCourses = JSON.parse(data)["data"]["courses"];
                    calculatedSchedule = calculateSchedule(selectedCourses);
                    renderSchedule({});
                    renderSchedule2({});
                    $("#calendar1").fullCalendar('refetchEvents');
                    $("#calendar2").fullCalendar('refetchEvents');


                    document.getElementById('calendar1').style.visibility = "visible";
                    document.getElementById('calendar1').style.display = "none";

                    document.getElementById('calendar2').style.visibility = "visible";
                    document.getElementById('calendar2').style.display = "block";

                    if ($('#schedule input ').is(":checked")) {
                        document.getElementById('calendar2').style.display = "block";
                        document.getElementById('calendar1').style.display = "none";
                    } else {
                        document.getElementById('calendar1').style.display = "block";
                        document.getElementById('calendar2').style.display = "none";
                    }
                    $("#selectDepartment").css("display","none");
                    $("#selectCourses").css("display","none");
                    $("#schedule").css("visibility","visible");
                    //$("#schedule").css("display","block");

                    document.getElementById('loading').style.visibility = 'hidden';
                    document.getElementById('background').style.visibility = 'visible';
                }
            });

        }
        function populateDepartmentsList(isback) {
            if(isback){
                $("#selectDepartment").css("display","block");
                $("#selectCourses").css("display","none");
            }

        }
        var renderSchedule = function () {

                    $('#calendar1').fullCalendar({
                        eventClick: function (calEvent, jsEvent, view) {

                            var info = document.getElementById('details1');
                            //info.innerHTML = JSON.stringify(calEvent);
                            //$(this).css('border-color', 'red');
                            //console.log(calEvent);
                            info.innerHTML = toTable(calEvent['data'], calEvent['type'], calEvent['day']);

                        },
                        header: {
                            left: 'prev,next',
                            right: 'agendaWeek'
                        },
                        buttonText: {
                            week: 'Schedules'
                        },
                        allDaySlot: false,
                        hiddenDays: [5, 6],
                        defaultDate: '2014-06-12',
                        defaultView: 'agendaWeek',
                        editable: false,
                        columnFormat: 'ddd',
                        //events: coursesADay
                        events: scheduleToEvents
                    });

                }
                ;
        var renderSchedule2 = function () {

                    $('#calendar2').fullCalendar({
                        eventClick: function (calEvent, jsEvent, view) {

                            var info = document.getElementById('details2');
                            //info.innerHTML = JSON.stringify(calEvent);
                            //$(this).css('border-color', 'red');
                            //console.log(calEvent);
                            info.innerHTML = toTable(calEvent['data'], calEvent['type'], calEvent['day']);

                        },
                        header: {
                            left: 'prev,next',
                            right: 'agendaWeek'
                        },
                        buttonText: {
                            week: 'Schedules'
                        },
                        allDaySlot: false,
                        hiddenDays: [5, 6],
                        defaultDate: '2014-06-12',
                        defaultView: 'agendaWeek',
                        editable: false,
                        columnFormat: 'ddd',
                        //events: coursesADay
                        events: scheduleToEvents2
                    });

                }
                ;
        function displaySchedule() {
            //renderSchedule({});
            //renderSchedule2({});
        }
        function scheduleToEvents(start, end, timezone, callback) {
            var calculatedScheduleTemp = calculatedSchedule;
            if (start.unix() >= 1402185600) {
                var weeknumber = ((start.unix() - 1402185600) / 604800) + 1;
                if (weeknumber <= calculatedScheduleTemp.length) {
                    var out = [];
                    for (var i = 0; i < calculatedScheduleTemp[weeknumber - 1].length; i++) {
                        out = out.concat(toScheduleEvent(calculatedScheduleTemp[weeknumber - 1][i][0], weeknumber, calculatedScheduleTemp[weeknumber - 1][i], 1));

                    }
                    var calendar = $('#calendar1').fullCalendar('getCalendar');
                    var m = calendar.moment();
                    m.add(7, 'days');
                    //console.log(out);
                    $('#calendar1 .fc-center').text(weeknumber + " / " + calculatedScheduleTemp.length + " " + ((calculatedScheduleTemp[weeknumber - 1]["available"]) ? "(متاح)" : "(غير متاح)"));
                    callback(out);
                } else {
                    $('#calendar1').fullCalendar('gotoDate', '2014-06-07');
                }
                //console.log(weeknumber);
            } else {
                $('#calendar1').fullCalendar('gotoDate', '2014-06-08');
            }

            //callback(toScheduleEvent(dataFromPost['data']['courses'][1],2));

        }
        function scheduleToEvents2(start, end, timezone, callback) {
            var calculatedScheduleTemp = availableSelectedCourses;
            if (start.unix() >= 1402185600) {
                var weeknumber = ((start.unix() - 1402185600) / 604800) + 1;
                if (weeknumber <= calculatedScheduleTemp.length) {
                    var out = [];
                    for (var i = 0; i < calculatedScheduleTemp[weeknumber - 1].length; i++) {
                        out = out.concat(toScheduleEvent(calculatedScheduleTemp[weeknumber - 1][i][0], weeknumber, calculatedScheduleTemp[weeknumber - 1][i], 2));

                    }
                    var calendar = $('#calendar2').fullCalendar('getCalendar');
                    var m = calendar.moment();
                    m.add(7, 'days');
                    //console.log(out);
                    $('#calendar2 .fc-center').text(weeknumber + " / " + calculatedScheduleTemp.length + " " + ((calculatedScheduleTemp[weeknumber - 1]["available"]) ? "(متاح)" : "(غير متاح)"));
                    callback(out);
                } else {
                    $('#calendar2').fullCalendar('gotoDate', '2014-06-08');
                }
                //console.log(weeknumber);
            } else {
                $('#calendar2').fullCalendar('gotoDate', '2014-06-08');
            }

            //callback(toScheduleEvent(dataFromPost['data']['courses'][1],2));

        }
        $(document).ready(function () {
            populateDepartmentsList();
            //populateCoursesAddList();
            var next = 1;
            $(".add-more").click(function (e) {
                e.preventDefault();
                var addto = "#field" + next;
                var addRemove = "#field" + (next);
                next = next + 1;
                //var newIn = '<input autocomplete="off" class="input form-control" id="field' + next + '" name="field' + next + '" type="text">';
                var newIn = toSelect(coursesInDepartment, 'field' + next) + '</div>';
                var newInput = $(newIn);
                var removeBtn = '<button id="remove' + (next - 1) + '" class="btn btn-danger remove-me" >-</button></div><div id="field">';
                var removeButton = $(removeBtn);
                $(addto).after(newInput);
                $(addRemove).after(removeButton);
                $("#field" + next).attr('data-source', $(addto).attr('data-source'));
                $("#count").val(next);

                $('.remove-me').click(function (e) {
                    e.preventDefault();
                    var fieldNum = this.id.charAt(this.id.length - 1);
                    var fieldID = "#field" + fieldNum;
                    $(this).remove();
                    $(fieldID).remove();
                });
            });
            $(function () {
                $(document).on('click', '.btn-add', function (e) {
                    e.preventDefault();

                    var controlForm = $('.controls form:first'),
                            currentEntry = $(this).parents('.entry:first'),
                            newEntry = $(currentEntry.clone()).appendTo(controlForm);

                    newEntry.find('input').val('');
                    controlForm.find('.entry:not(:last) .btn-add')
                            .removeClass('btn-add').addClass('btn-remove')
                            .removeClass('btn-success').addClass('btn-danger')
                            .html('<span class="glyphicon glyphicon-minus"></span>');
                }).on('click', '.btn-remove', function (e) {
                    $(this).parents('.entry:first').remove();

                    e.preventDefault();
                    return false;
                });
            });


            //console.log(dataFromPostAjax);
            var dataFromPost2 = [dataFromPostAjax['data']['courses'][33], dataFromPostAjax['data']['courses'][32], dataFromPostAjax['data']['courses'][29], dataFromPostAjax['data']['courses'][27], dataFromPostAjax['data']['courses'][26], dataFromPostAjax['data']['courses'][35]];
            //console.log(dataFromPost2);
            //console.log([sortedCourses[33], sortedCourses[32], sortedCourses[29], sortedCourses[27], sortedCourses[26], sortedCourses[35]]);
            //console.log(cartesian(dataFromPost2));
            //calculatedSchedule = calculateSchedule(dataFromPost2);
            //console.log(calculatedSchedule);


            //renderSchedule({});
            //renderSchedule2({});
            document.getElementById('calendar1').style.visibility = "hidden";
            document.getElementById('calendar2').style.visibility = "hidden";
            //$('#calendar').fullCalendar('addEventSource', {});

            var filterdSubjects = filterSubjects(sortedCourses, ["101 سلم", "ريض 106", "سلم 102",]);
            //console.log(filterdSubjects);


            $('#schedule input ').on('change', function () {
                if ($('#schedule input ').is(":checked")) {
                    document.getElementById('calendar2').style.display = "block";
                    document.getElementById('calendar1').style.display = "none";
                } else {
                    document.getElementById('calendar1').style.display = "block";
                    document.getElementById('calendar2').style.display = "none";
                }
            });
            $("#selectDepartment").css("display","block");
            $("#selectCourses").css("display","none");
            $("#schedule").css("visibility","hidden");
        });
        /*

         [
         {
         title: 'All Day Event',
         start: '2014-06-01'
         },
         {
         title: 'Long Event',
         start: '2014-06-07',
         end: '2014-06-10'
         },
         {
         id: 999,
         title: 'Repeating Event',
         start: '2014-06-09T16:00:00'
         },
         {
         id: 999,
         title: 'Repeating Event',
         start: '2014-06-16T16:00:00'
         },
         {
         title: 'Meeting',
         start: '2014-06-12T10:30:00',
         end: '2014-06-12T22:30:00',
         courseData:{}
         },
         {
         title: 'Lunch',
         start: '2014-06-12T12:00:00'
         },
         {
         title: 'Birthday Party',
         start: '2014-06-13T07:00:00'
         },
         {
         title: 'Click for Google',
         url: 'http://google.com/',
         start: '2014-06-28'
         }
         ]

         */
    </script>
    <style type="text/css">

        #background {
            width: 900px;
            margin: auto;
        }

        #selectDepartment {
            width: 500px;
            margin: auto;
        }

        #schedule {
            width: 600px;
            margin: auto;
        }

        #selectCourses {
            width: 500px;
            margin: auto;
        }

        #calendar1 {
            width: 600px;
            margin: 0 auto;
        }

        #calendar2 {
            width: 600px;
            margin: 0 auto;
        }

        #loading {
            width: 100%;
            margin: auto auto;
            text-align: center;
            position: absolute;
            top: 50%;
            height: 50%;
            visibility: hidden;
        }

    </style>
    <style>
        #details1 {

            overflow: auto;
        }

        #details2 {
            overflow: auto;
        }

        .datagrid table {
            border-collapse: collapse;
            text-align: left;
            width: 100%;
        }

        .datagrid {
            font: normal 12px/150% Arial, Helvetica, sans-serif;
            background: #fff;
            overflow: hidden;
            border: 1px solid #CFCFCF;
            -webkit-border-radius: 3px;
            -moz-border-radius: 3px;
            border-radius: 3px;
        }

        .datagrid table td,
        .datagrid table th {
            padding: 3px 10px;
        }

        .datagrid table thead th {
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #3A87AD), color-stop(1, #3A87AD));
            background: -moz-linear-gradient(center top, #3A87AD 5%, #3A87AD 100%);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#3A87AD', endColorstr='#3A87AD');
            background-color: #3A87AD;
            color: #FFFFFF;
            font-size: 15px;
            font-weight: bold;
            border-left: 1px solid #0070A8;
        }

        .datagrid table thead th:first-child {
            border: none;
        }

        .datagrid table tbody td {
            color: #00496B;
            border-left: 1px solid #CDD4E0;
            font-size: 12px;
            font-weight: normal;
        }

        .datagrid table tbody .alt td {
            background: #E6E6E6;
            color: #00547A;
        }

        .datagrid table tbody td:first-child {
            border-left: none;
        }

        .datagrid table tbody tr:last-child td {
            border-bottom: none;
        }

        div.dhtmlx_window_active, div.dhx_modal_cover_dv {
            position: fixed !important;
        }

        #field {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
<div id="loading">
    <img src="../images/loading32x32.gif"><br><br><b>
        من فضلك انتظر</b>
</div>
<div id="background">
    <div id="selectDepartment">
        <form role="form">
            <div class="form-group" id="departmentsList" method="post" action="getcourses">
                <label for="sel1">اختر احد التخصصات التالية:</label>
                <select class="form-control id=“sel1">
                    <% for (var i = 0; i < departmentsList.length; i++) { %>
                    <option> <%= departmentsList[i]["DepartmentName"] %> </option>
                    <% } %>
                </select>

            </div>
            <div class="form-group">

                <button type="submit" class="btn btn-default"
                        onclick="selectedDepartment=document.getElementById('departmentsList').children[1].selectedIndex;populateCoursesAddList();return false;">
                    التالي
                </button>
            </div>
        </form>
    </div>

    <div id="selectCourses">


        <div class="row">
            <div class="control-group" id="fields">
                <label class="control-label" for="field1">اضافة مادة دراسية:</label>

                <div class="controls">
                    <form id="coursesAddList" role="form" autocomplete="off">
                        <div class="entry input-group col-xs-3">
                            <select id="field1">
                                <option>5</option>
                            </select>
                    	<span class="input-group-btn">
                            <button class="btn btn-success btn-add" type="button">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>
                        </span>
                        </div>
                    </form>
                    <br>
                    <small>اضغط على <span class="glyphicon glyphicon-plus gs"></span> لاضافة ماده جديدة</small>
                </div>
                <div class="form-group">
                    <button onclick="populateDepartmentsList(true);return false;" type="submit" class="btn btn-default">السابق</button>
                    &nbsp&nbsp&nbsp&nbsp;
                    <button type="submit" class="btn btn-default" onclick="populateSchedule();return false;">التالي
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div id="schedule">
        <input type="checkbox" checked> اظهار المتاحة فقط
        <br><br><br>

        <div id="calendar1" class="fc fc-ltr fc-unthemed">
            <div id="details1" class="datagrid">

            </div>
        </div>
        <div id="calendar2" class="fc fc-ltr fc-unthemed">
            <div id="details2" class="datagrid">

            </div>
        </div>
        &nbsp;&nbsp;&nbsp;
        <div class="form-group">
            <button onclick="populateCoursesAddList(true);return false;" type="submit" class="btn btn-default">السابق</button>

        </div>
    </div>

</div>
</body>
</html>